"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/merge-anything";
exports.ids = ["vendor-chunks/merge-anything"];
exports.modules = {

/***/ "(ssr)/./node_modules/merge-anything/dist/index.esm.js":
/*!*******************************************************!*\
  !*** ./node_modules/merge-anything/dist/index.esm.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concatArrays: () => (/* binding */ concatArrays),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   merge: () => (/* binding */ merge)\n/* harmony export */ });\n/* harmony import */ var is_what__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-what */ \"(ssr)/./node_modules/is-what/dist/index.esm.js\");\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */ function __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction assignProp(carry, key, newVal, originalObject) {\n    var propType = originalObject.propertyIsEnumerable(key) ? \"enumerable\" : \"nonenumerable\";\n    if (propType === \"enumerable\") carry[key] = newVal;\n    if (propType === \"nonenumerable\") {\n        Object.defineProperty(carry, key, {\n            value: newVal,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        });\n    }\n}\nfunction mergeRecursively(origin, newComer, extensions) {\n    // work directly on newComer if its not an object\n    if (!(0,is_what__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(newComer)) {\n        // extend merge rules\n        if (extensions && (0,is_what__WEBPACK_IMPORTED_MODULE_0__.isArray)(extensions)) {\n            extensions.forEach(function(extend) {\n                newComer = extend(origin, newComer);\n            });\n        }\n        return newComer;\n    }\n    // define newObject to merge all values upon\n    var newObject = {};\n    if ((0,is_what__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(origin)) {\n        var props_1 = Object.getOwnPropertyNames(origin);\n        var symbols_1 = Object.getOwnPropertySymbols(origin);\n        newObject = __spreadArrays(props_1, symbols_1).reduce(function(carry, key) {\n            // @ts-ignore\n            var targetVal = origin[key];\n            if (!(0,is_what__WEBPACK_IMPORTED_MODULE_0__.isSymbol)(key) && !Object.getOwnPropertyNames(newComer).includes(key) || (0,is_what__WEBPACK_IMPORTED_MODULE_0__.isSymbol)(key) && !Object.getOwnPropertySymbols(newComer).includes(key)) {\n                assignProp(carry, key, targetVal, origin);\n            }\n            return carry;\n        }, {});\n    }\n    var props = Object.getOwnPropertyNames(newComer);\n    var symbols = Object.getOwnPropertySymbols(newComer);\n    var result = __spreadArrays(props, symbols).reduce(function(carry, key) {\n        // re-define the origin and newComer as targetVal and newVal\n        var newVal = newComer[key];\n        var targetVal = (0,is_what__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(origin) ? origin[key] : undefined;\n        // extend merge rules\n        if (extensions && (0,is_what__WEBPACK_IMPORTED_MODULE_0__.isArray)(extensions)) {\n            extensions.forEach(function(extend) {\n                newVal = extend(targetVal, newVal);\n            });\n        }\n        // When newVal is an object do the merge recursively\n        if (targetVal !== undefined && (0,is_what__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(newVal)) {\n            newVal = mergeRecursively(targetVal, newVal, extensions);\n        }\n        assignProp(carry, key, newVal, newComer);\n        return carry;\n    }, newObject);\n    return result;\n}\n/**\r\n * Merge anything recursively.\r\n * Objects get merged, special objects (classes etc.) are re-assigned \"as is\".\r\n * Basic types overwrite objects or other basic types.\r\n *\r\n * @param {(IConfig | any)} origin\r\n * @param {...any[]} newComers\r\n * @returns the result\r\n */ function merge(origin) {\n    var newComers = [];\n    for(var _i = 1; _i < arguments.length; _i++){\n        newComers[_i - 1] = arguments[_i];\n    }\n    var extensions = null;\n    var base = origin;\n    if ((0,is_what__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(origin) && origin.extensions && Object.keys(origin).length === 1) {\n        base = {};\n        extensions = origin.extensions;\n    }\n    return newComers.reduce(function(result, newComer) {\n        return mergeRecursively(result, newComer, extensions);\n    }, base);\n}\nfunction concatArrays(originVal, newVal) {\n    if ((0,is_what__WEBPACK_IMPORTED_MODULE_0__.isArray)(originVal) && (0,is_what__WEBPACK_IMPORTED_MODULE_0__.isArray)(newVal)) {\n        // concat logic\n        return originVal.concat(newVal);\n    }\n    return newVal; // always return newVal as fallback!!\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (merge);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/merge-anything/dist/index.esm.js\n");

/***/ })

};
;